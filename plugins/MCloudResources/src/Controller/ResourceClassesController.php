<?php
namespace MCloudResources\Controller;

use MCloudResources\Controller\AppController;

/**
 * ResourceClasses Controller
 *
 * @property \MCloudResources\Model\Table\ResourceClassesTable $ResourceClasses
 */
class ResourceClassesController extends AppController
{

    public function isAuthorized($user) : bool
    {
        // Allow all users to list, view and add projects
        if (in_array($this->request->getParam('action'), ['view', 'add', 'index'])){
            if (isset($user['role']) && $user['role'] === 'user') {
                return true;
            }
        }

        if (in_array($this->request->getParam('action'), ['edit', 'delete'])){
            $id = $this->request->getParam('pass.0');
            if ($this->ResourceClasses->isOwnedBy($id, $user['id'])) {
                return true;
            }
        }

        return parent::isAuthorized($user); // TODO: Change the autogenerated stub
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        $resourceClasses = $this->paginate($this->ResourceClasses);

        $this->set(compact('resourceClasses'));
        $this->set('_serialize', ['resourceClasses']);
    }

    /**
     * View method
     *
     * @param string|null $id Resource Class id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $resourceClass = $this->ResourceClasses->get($id, [
            'contain' => []
        ]);

        $this->set('resourceClass', $resourceClass);
        $this->set('_serialize', ['resourceClass']);
    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $resourceClass = $this->ResourceClasses->newEntity();
        if ($this->request->is('post')) {
            $resourceClass = $this->ResourceClasses->patchEntity($resourceClass, $this->request->data);
            $resourceClass->uname = $resourceClass->package . '.' . $resourceClass->ctrl;
            $resourceClass->uid ='';
            if ($this->ResourceClasses->save($resourceClass)) {
                $this->Flash->success(__('The resource class has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The resource class could not be saved. Please, try again.'));
        }
        $this->set(compact('resourceClass'));
        $this->set('_serialize', ['resourceClass']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Resource Class id.
     * @return \Cake\Network\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $resourceClass = $this->ResourceClasses->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $resourceClass = $this->ResourceClasses->patchEntity($resourceClass, $this->request->data);
            $resourceClass->uid ='';
            if ($this->ResourceClasses->save($resourceClass)) {
                $this->Flash->success(__('The resource class has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The resource class could not be saved. Please, try again.'));
        }
        $this->set(compact('resourceClass'));
        $this->set('_serialize', ['resourceClass']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Resource Class id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $resourceClass = $this->ResourceClasses->get($id);
        if ($this->ResourceClasses->delete($resourceClass)) {
            $this->Flash->success(__('The resource class has been deleted.'));
        } else {
            $this->Flash->error(__('The resource class could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
