<?php
namespace CakeAuth\Controller\Settings;

use Cake\Event\Event;
use CakeAuth\Controller\AbstractUsersController;

/**
 * Users Controller
 *
 * @property \CakeAuth\Model\Table\UsersTable $Users
 */
class UsersController extends AbstractUsersController
{

    public function beforeRender(Event $event)
    {
        parent::beforeRender($event); // TODO: Change the autogenerated stub
        $this->Auth->allow('profile');
    }

    public function isAuthorized($user) : bool
    {
        // Allow all users to list, view and add projects
        if (in_array($this->request->getParam('action'), ['profile', 'admin', 'twoFaAuthentication' , 'updateImage'])){
            if (isset($user['role']) && $user['role'] === 'user') {
                return true;
            }
        }

        if (in_array($this->request->getParam('action'), ['edit'])){
            $id = $this->request->getParam('pass.0');
            if ($this->Users->isOwnedBy($id, $user['id'])) {
                return true;
            }
        }

        return parent::isAuthorized($user); // TODO: Change the autogenerated stub
    }

    protected function _getAuthUserInfo()
    {
        return $this->Users->get($this->Auth->user('id'), [
            'contain' => ['Profiles']
        ]);
    }
    /**
     * Profile
     */
    public function profile ()
    {
        $user = $this->_getAuthUserInfo();

        $this->set('user', $user);
        $this->set('_serialize', ['user']);
    }

    public function admin()
    {
        $user = $this->_getAuthUserInfo();

        $this->set('user', $user);
        $this->set('_serialize', ['user']);
    }

    public function twoFaAuthentication()
    {
        $user = $this->_getAuthUserInfo();

        $this->set('user', $user);
        $this->set('_serialize', ['user']);
    }

    /**
     * Edit method
     *
     * @param string|null $id User id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $user = $this->Users->get($id, [
            'contain' => ['Profiles']
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $user = $this->Users->patchEntity($user, $this->request->data);
            if ($this->Users->save($user)) {
                $this->Flash->success(__('The user has been saved.'));

                return $this->redirect($this->referer());
            } else {
                $this->Flash->error(__('The user could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('user'));
        $this->set('_serialize', ['user']);
    }
}
