<?php
namespace CakeService\Controller;

use Cake\Event\Event;
use Cake\ORM\TableRegistry;
use CakeService\Controller\AppController;
use Emojione\Client;
use Emojione\Emojione;
use Emojione\Ruleset;
use MayMeow\Api\ServerResponse;
use MayMeow\Helpers\MeowDown;

/**
 * Issues Controller
 *
 * @property \CakeService\Model\Table\IssuesTable $Issues
 *
 * @property array $userActions
 * @property array $publicActions
 * @method \CakeService\Model\Entity\Issue[] paginate($object = null, array $settings = [])
 */
class IssuesController extends AbstractIssuesController
{
    /**
     * @var array
     */
    protected $userActions = ['view', 'add', 'index', 'blob'];

    /**
     * @var array
     */
    protected $authorizedActions = ['edit', 'delete'];

    public function beforeFilter(Event $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub

        $this->set('crud_admin_menu', $this->_adminMenu());
    }

    /**
     * @param $user
     * @return bool
     */
    public function isAuthorized($user): bool
    {
        // Allow all users to list, view and add projects
        if (in_array($this->request->getParam('action'), $this->userActions)){
            if (isset($user['role']) && $user['role'] === 'user') {
                return true;
            }
        }

        if (in_array($this->request->getParam('action'), $this->authorizedActions)){
            $id = $this->request->getParam('pass.0');
            if ($this->Issues->isOwnedBy($id, $user['id'])) {
                return true;
            }
        }

        return parent::isAuthorized($user); // TODO: Change the autogenerated stub
    }

    /**
     *
     */
    public function board()
    {

    }
}
